var app = angular.module('app', [
  'ui.router',
  'ngAnimate', 
  'appRoutes', 
  'stormpath',
  'stormpath.templates',
  'app.factories', 
  'MainCtrl', 
  'LoginCtrl', 
  'HomeCtrl', 
  'DashboardCtrl', 
  'PostsCtrl',
  'PostsCreateCtrl',
  'PostsEditCtrl',
  'PostsViewCtrl',
  'PortfolioCtrl',
  'PortfolioDetailCtrl'
]);

app.run(function($stormpath){
  $stormpath.uiRouter({
    loginState: 'login',
    defaultPostLoginState: 'dashboard'
  });
});
angular.module('appRoutes', []).config(['$stateProvider', '$locationProvider', '$urlRouterProvider', function($stateProvider, $locationProvider, $urlRouterProvider) {

    $urlRouterProvider.otherwise("/");

    $stateProvider

        .state('home', {
            url: '/',
            views: {
                header: {
                    templateUrl: '/templates/_common/templates/header.tmpl.html',
                },
                content: {
                    templateUrl: '/templates/home/home.view.html',
                    controller: 'HomeController',
                    controllerAs: 'home'
                },
                footer: {
                    templateUrl: '/templates/_common/templates/footer.tmpl.html',
                }
            }
        })

        .state('dashboard', {
            url: '/dashboard',
            views: {
                header: {
                    templateUrl: '/templates/_common/templates/header.tmpl.html',
                },
                content: {
                    templateUrl: '/templates/dashboard/dashboard.view.html',
                    controller: 'DashboardController',
                    controllerAs: 'dashboard'
                },
                footer: {
                    templateUrl: '/templates/_common/templates/footer.tmpl.html',
                }
            }
        })

        .state('posts', {
            url: '/posts',
            views: {
                header: {
                    templateUrl: '/templates/_common/templates/header.tmpl.html',
                },
                content: {
                    templateUrl: '/templates/posts/posts.view.html',
                },
                footer: {
                    templateUrl: '/templates/_common/templates/footer.tmpl.html',
                }
            },
            redirectTo: 'posts.index'
        })

            .state('posts.index', {
                url: '',
                views: {
                    posts: {
                        templateUrl: '/templates/posts/index/index.view.html',
                        controller: 'PostsController',
                        controllerAs: 'posts'
                    }
                }
            })

            .state('posts.create', {
                url: '/create',
                views: {
                    posts: {
                        templateUrl: '/templates/posts/create/create.view.html',
                        controller: 'PostsCreateController',
                        controllerAs: 'createpost'
                    }
                },
                sp: {
                    authenticate: true
                }
            })

            .state('posts.view', {
                url: '/view/:postId',
                views: {
                    posts: {
                        templateUrl: '/templates/posts/view/view.view.html',
                        controller: 'PostsViewController',
                        controllerAs: 'viewpost',
                        resolve: {
                            postId: ['$stateParams', '$state', function($stateParams, $state){
                                if(!$stateParams.postId) {
                                    $state.go('posts');
                                }  else {
                                    return $stateParams.postId;
                                }                               
                            }]
                        }
                    }
                }
            })

            .state('posts.edit', {
                url: '/edit/:postId',
                views: {
                    posts: {
                        templateUrl: '/templates/posts/edit/edit.view.html',
                        controller: 'PostsEditController',
                        controllerAs: 'editpost',
                        resolve: {
                            postId: ['$stateParams', '$state', function($stateParams, $state){
                                if(!$stateParams.postId) {
                                    $state.go('posts');
                                }  else {
                                    return $stateParams.postId;
                                }                               
                            }]
                        }
                    }
                },
                sp: {
                    authenticate: true
                }
            })


        .state('portfolio', {
            url: '/portfolio',
            views: {
                header: {
                    templateUrl: '/templates/_common/templates/header.tmpl.html',
                },
                content: {
                    templateUrl: '/templates/portfolio/portfolio.view.html',
                },
                footer: {
                    templateUrl: '/templates/_common/templates/footer.tmpl.html',
                }
            },
            redirectTo: 'portfolio.index'
        })

            .state('portfolio.index', {
                url: '',
                views: {
                    portfolio: {
                        templateUrl: '/templates/portfolio/index/index.view.html',
                        controller: 'PortfolioController',
                        controllerAs: 'portfolio'
                    }
                }
            })

            .state('portfolio.detail', {
                url: '/:portfolioBase/:portfolioTitle',
                views: {
                    portfolio: {
                        templateUrl: '/templates/portfolio/detail/detail.view.html',
                        controller: 'PortfolioDetailController',
                        controllerAs: 'detail',
                        resolve: {
                            portfolioBase: ['$stateParams', '$state', function($stateParams, $state){
                                if(!$stateParams.portfolioBase) {
                                    $state.go('portfolio');
                                }  else {
                                    return $stateParams.portfolioBase;
                                }                               
                            }],
                            portfolioTitle: ['$stateParams', '$state', function($stateParams, $state){
                                if(!$stateParams.portfolioTitle) {
                                    $state.go('portfolio');
                                }  else {
                                    return $stateParams.portfolioTitle;
                                }                               
                            }]
                        }
                    }
                }
            })

        .state('login', {
            url: '/login',
            views: {
                header: {
                    templateUrl: '/templates/_common/templates/header.tmpl.html',
                },
                content: {
                    templateUrl: '/templates/login/login.view.html',
                    controller: 'LoginController',
                    controllerAs: 'login'
                },
                footer: {
                    templateUrl: '/templates/_common/templates/footer.tmpl.html',
                }
            }
        })

        // .state('login', {
        //     url: '/login',
        //     external: true
        // })

        .state('logout', {
            url: '/logout',
            external: true
        })

        .state('register', {
            url: '/register',
            external: true
        })

        ;

    $locationProvider.html5Mode({
        enabled: true,
        requireBase: false
    });

}]);
angular.module('DashboardCtrl', []).controller('DashboardController', function(Page) {
  var vm = this;

  Page.setTitle('Dashboard');   
  vm.title = 'Dashboard';

});
angular.module('HomeCtrl', []).controller('HomeController', function(Page) {
  var vm = this;

  Page.setTitle('Home');   
  vm.title = 'Home';
});
angular.module('LoginCtrl', []).controller('LoginController', function(Page) {
  var vm = this;

  Page.setTitle('Login');   
  vm.title = 'Login';

});
angular.module('PortfolioCtrl', []).controller('PortfolioController', function($http, Page, $location) {
  var vm = this;

  Page.setTitle('Portfolio');  
  vm.title = 'Portfolio';

  $http.get('/api/portfolio')
    .success(function (res) {
      vm.list = res;
    });
});

angular.module('PostsCtrl', []).controller('PostsController', function (Page, Post) {
  var vm = this;

  Page.setTitle('All Posts');   
  vm.title = 'All Posts';

  Post.getAll()
    .success(function(data, status) {
      vm.posts = data;
    })
    .error(function(data, status) {
      console.log("Error retreiving posts");
    });
});
angular.module('MainCtrl', []).controller('MainController', function($state, $rootScope, $http, $window, Page) {
  var vm = this;

  vm.Page = Page;
  
  $http.get('/api/navigation')
    .success(function (res) {
      vm.navigation = res
    });

  $http.get('/auth/user')
    .success(function (res) {
      vm.user = res;
    })
    .error(function (res) {
      console.log('not logged in');
    });

  vm.state = $state;

  vm.date = new Date();

  $rootScope.$on('$stateChangeStart', function(evt, to, params) {
    if (to.redirectTo) {
      evt.preventDefault();
      $state.go(to.redirectTo, params)
    } else if (to.external) {
      evt.preventDefault();
      $window.open(to.url, '_self');
    }
  });
});
(function() {
  'use strict';

  angular
    .module('app.factories', ['ngResource'])
    ;
})();

(function() {
  'use strict';

  angular
    .module('app.factories')
    .factory('NavigationResource', navigationResource)
  ;

  /* @ngInject */
  function navigationResource($resource) {
    var uri = '/api/navigation/';
    var timeout = 1000;
    console.log('return navigation api');
  }
})();

(function() {
  'use strict';

  angular
    .module('app.factories')
    .factory('Page', page)
  ;

  /* @ngInject */
  function page() {
    var title = 'Boilerplate';
    return {
      title: function() { return title + ' | Boilerplate'; },
      setTitle: function(newTitle) { title = newTitle + ' | Boilerplate' }
    };
  }
})();
(function() {
  'use strict';

  angular
    .module('app.factories')
    .factory('Post', post)
  ;

  /* @ngInject */
  function post($http) {
    var uri = '/api/posts';

    var o = {
      post: []
    };

    o.getAll = function() {
      return $http.get(uri);
    },
    o.getOne = function(id) {
      return $http.get(uri + '/' + id);
    },
    o.createNew = function(postData) {
      return $http.post(uri, postData);
    },
    o.update = function(id, postData) {
      return $http.put(uri + '/' + id, postData);
    },
    o.delete = function(id) {
      return $http.delete(uri + '/' + id);
    }

    return o;
  }
})();
angular.module('PortfolioDetailCtrl', []).controller('PortfolioDetailController', function($http, Page, portfolioBase, portfolioTitle) {
  var vm = this;
  
  $http.get('/api/portfolio/' + portfolioBase + '/' + portfolioTitle)
    .success(function (res) {
      vm.portfolioDetail = res;
    });
  $http.get('/api/portfolio/preview/' + portfolioBase + '/' + portfolioTitle)
    .success(function (res) {
      vm.portfolioPreview = res;
      Page.setTitle(res.project);
    });
});

angular.module('PostsCreateCtrl', []).controller('PostsCreateController', function(Page, Post) {
  var vm = this;

  Page.setTitle('Create New Post');   
  vm.title = 'Create New Post';

  vm.addPost = addPost;

  vm.postTitle;
  vm.postContent;

  function addPost() {
    Post.createNew( 
    { 
     name: vm.postTitle,
     content: vm.postContent
    });
  }

});
angular.module('PostsEditCtrl', []).controller('PostsEditController', function(Page, Post, $http, $location, postId) {
  var vm = this;

  Page.setTitle('Edit Post');   
  vm.title = 'Edit Post';
  vm.postId = postId;
  vm.updatePost = updatePost;
  vm.deletePost = deletePost;

  Post.getOne(postId)
    .success(function(data, status) {
      if(data.name === "CastError") {
        vm.postTitle = "error";
      } else {
        vm.postDetail = data;
        vm.postTitle = vm.postDetail.name;
        vm.postContent = vm.postDetail.content;
      }
    })
    .error(function(data, status) {
      alert("Error retreiving post");
    });

  function updatePost() {
    Post.update(postId, {
      name: vm.postTitle,
      content: vm.postContent
    });
    $location.url('/posts/view/' + postId);
  }

  function deletePost() {
    Post.delete(postId);
    $location.url('/posts');
  }

});
angular.module('PostsViewCtrl', []).controller('PostsViewController', function(Page, Post, $http, postId) {
  var vm = this;

  Page.setTitle('View Post');   
  vm.title = 'View Post';
  vm.postId = postId;


  $http.get('/api/posts/' + postId)
    .success(function (res) {
      vm.postDetail = res;
    });
});